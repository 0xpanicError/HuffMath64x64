#include "./Math.huff"
#include "./AbdkMath.huff"

/* Interface */
#define function addNumbers(uint256,uint256,uint256,uint256) nonpayable returns (uint256,uint256)
#define function fromInt(int256) nonpayable returns (int128)

#define macro ADD_WRAPPER() = takes (4) returns (2) {
    0x04 calldataload    // [num1]
    0x24 calldataload    // [num2, num1]
    0x44 calldataload
    0x64 calldataload
    ADD_NUMBERS()        // [num2+num1]
    0x00 mstore          // []
    0x20 mstore
    0x40 0x00 return     // []  
}

#define macro FROM_INT_WRAPPER() = takes (1) returns (1) {
    0x04 calldataload
    FROM_INT()
    0x00 mstore
    0x20 0x00 return
}


#define macro MAIN() = takes (0) returns (0) {
    // Identify which function is being called.
    0x00 calldataload 
    
    // Extract the function singature 0x854dd5a0
    0xe0 shr

    // Jump table
    dup1 __FUNC_SIG(addNumbers) eq  addNumbers      jumpi
    dup1 __FUNC_SIG(fromInt)    eq  fromInt         jumpi
    0x00 0x00 revert

    addNumbers:
        ADD_WRAPPER()

    fromInt:
       FROM_INT_WRAPPER()

}